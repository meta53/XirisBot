|**
----------------------------
XIRIS_BOT.mac
----------------------------
This macro is configured for use by my crew based on class
Modify for specific toons
______________________________________________
REVISION HISTORY
    08.10.10    xiris
	11.17.10	xiris	Added delays everywhere to try to figure out weird failures
	09.04.15	xiris	Changed the variant_initialize to better handle weirdness from EMU
	10.05.15	xiris	Changed to use modbot for certain classes, better handle standard values
	12.04.15	xiris 	Modified how the initialization of parameters works
						Added a ranger specific macro
	09.17.18	xiris   Did some cleanup, its quicker now
	04.10.22	xiris   Mild refactoring to bring arg names inline with new	
	05.01.23	xiris	Consolidated the melee endurance classes into a single statement
**|

#TURBO 120
#define INI_CHAR xiris_class_ini/BOT_${Me.Class.ShortName}_${Me.CleanName}.ini

	
|-------------------------------------------------------------------------------- 
|SUB: Main
|--------------------------------------------------------------------------------
Sub Main(string _tank1Name, string _tank2Name, string _tank3Name, int _healPoint, string _assistArgs)
	
	
	/echo \agYou are now in \arXIRIS: \aoXIRIS_BOT.mac

	| set default values here in case we just started the loader with no args
	/declare	str_defTank1		string	outer	${Ini[INI_CHAR,Settings,defaultTank1,Xiris]}
	/declare	str_defTank2		string	outer	${Ini[INI_CHAR,Settings,defaultTank2,Xiria]}
	/declare	str_defTank3		string	outer	${Ini[INI_CHAR,Settings,defaultTank3,Xirea]}
	/declare	int_defHealPoint	int		outer	${Ini[INI_CHAR,Heal_Points,int_point_tank_normal,65]}
	/declare    str_defAssistArgs	string	outer 	FALSE,98

	/if (!${_tank1Name.Length} || ${_tank1Name.Equal[NULL]}) /varset _tank1Name ${str_defTank1}
	/if (!${_tank2Name.Length} || ${_tank2Name.Equal[NULL]}) /varset _tank2Name ${str_defTank2}
	/if (!${_tank3Name.Length} || ${_tank3Name.Equal[NULL]}) /varset _tank3Name ${str_defTank3}

	/if (${_healPoint} == 0) /varset _healPoint ${int_defHealPoint}
	/if (!${_assistArgs.Length} || ${_assistArgs.Equal[NULL]}) /varset _assistArgs ${str_defAssistArgs}

	/echo LOADER: MT: ${_tank1Name}(${Spawn[PC ${_tank1Name}]}) @ HealPoint:${_healPoint} Tank2: ${_tank2Name}(${Spawn[PC ${_tank2Name}]}) Tank3: ${_tank3Name}
	
	| Determine which  macro to load
	| note: melee endurance classes will run bot_melee
	/declare 	macroName	string 	outer bot_${Me.Class.ShortName}
	
	/if (${Me.Class.ShortName.Equal[ROG]} || ${Me.Class.ShortName.Equal[MNK]} || ${Me.Class.ShortName.Equal[BER]}) {
		/varset macroName bot_melee
	} 

	| Load the class macro
	/mac ${macroName} ${_tank1Name} ${_tank2Name} ${_tank3Name} ${_healPoint} ${_assistArgs}
	
 /return
 
