|**
----------------------------
BOT_BST.mac
----------------------------
This macro is configured for use by any melee class
Modify the BOT_CLS_CHARNAME.ini file for use by a specific toon
This was written ground up for usage with xiris's bots.

Usage: /mac bot_bst
______________________________________________
REVISION HISTORY
	11.14.22	xiris	INITIAL REVISION using modified bot_mag, and things from bot_shm
______________________________________________
REQUIRED PLUGINS
    mq2cast
    mq2eqbc
    mq2debuffs
    mq2moveutils
    
______________________________________________
REQUIRED INCLUDES  
	xiris_common/xiris_common.inc
**|


#include xiris_common/xiris_common.inc

#TURBO 120

#EVENT PARAGON 				"#*#paragonON"
#EVENT DOSHRINK 			"[#1#] doShrink#*#"
#EVENT DOSHRINK 			"<#1#> doShrink#*#"
#EVENT DOSHRINK				"#1# tells the group#*#'doShrink#*#'"
#EVENT DOSHRINK				"#1# tells you#*#'doShrink#*#'"
#EVENT DOSHRINK				"#1# tells the raid#*#'doShrink#*#'"
#EVENT DOSHRINK				"#1# tell your raid#*#'doShrink#*#'"
#EVENT DOSHRINK 			"[ #1# #*#]#*#doShrink#*#"

Sub InitEvents_Class
	/call RegisterClassEvents Events_BST 1
/return

Sub Events_BST
	/doevents PARAGON
	/doevents DOSHRINK
/return

Sub Events_SHM
	
/return 

Sub Event_PARAGON
	|Todo once I actually have a BST
/return 

Sub Main(string _tank1Name, string _tank2Name, string _tank3Name, int _healPoint, string _assistArgs)
	/echo You are now in xiris_bot_${Me.Class.ShortName}.mac

	|-- initialize the common xbot libraries
	/call xbot_initialize ${_tank1Name} ${_tank2Name} ${_tank3Name} ${_healPoint} ${_assistArgs}

	|-- initialize the macro specific libraries
	/call variant_initialize

	|-- report my status
	/dgt [${Me.Class.ShortName}] ${Me.Name} ${str_action} >> ${Spawn[${_tank1Name}].CleanName} << 

	|-- target the MT
	/call TrueTarget ${int_MTID}

	|**
	----------------------------
	Main Loop
	----------------------------
	Runs in order listed,
	if adding any routine add the call here
	----------------------------
	**|
	
	:MainLoop
		/if (${Me.Hovering} || ${Window[tradewnd].Open} || ${Window[lootwnd].Open}) /goto :MainLoop
		|-- Check All Events
		/call RunAllEvents

		|-- Check to make sure MT is still alive, if not, find another
		/call chkMTAlive FALSE
		
		|-- Check to see if self needs to be cured (xiris_curing.inc)
		/call chkNeedCure

		|-- Check the group for healing (xiris_healing.inc)
		/call chkHeal_Group

		|-- Check Auto Assist if its on
		/if (${bln_autoAssist}) /call chkAutoAssist

		|-- Check ATTK Buffs with long recast
		/call chkATTKBuffs

		/if (${bln_engaged}) {
			|-- check all events
			/call RunAllEvents
			
			|-- debuff lib
			/if (${${DEBUFF_Total}}) /call chkDebuffsOnSingleTarget ${int_targetID}

			|-- class specific
			/if (${Pet.ID}) /call chkPetAttack

			|-- melee library
			/call chkCA_${Me.Class.ShortName}
			
			|-- dps library (casting hybrid)
			/call chkNuke
			/call chkDOT

			|-- std library (burns/aa/clicks)
			/call chkAA
			/call chkBurn
			/call chkClicky

			|-- verify target status
			/call chkTargetStatus
		} else {
			|-- check utilities, includes: sit,loot,leash (out of combat only) and only once every 10 seconds
			/if (!${timer_check_utilities}) /call chkUtils
			/if (!${timer_check_downshits}) /call chkDownshits
			/if (!${timer_check_loot} && ${bln_looting}) /call chkLoot
		}
	|-- start again	
    /goto :MainLoop
/return


|**
 ----------------------------
 Utility Checking
 ----------------------------
 Checks the utilities such as fail states (GM, Lobby, etc)
 Checks to see if we should med, loot, leash
 note: these routines are defined in xiris_common for the most part
 ----------------------------
**|
Sub chkUtils
	|-- Class Methods
	/call chkPet

	|-- Standard Methods
	/call chkSit
	/varset timer_check_utilities 20s

/return


Sub EVENT_DOSHRINK(_line, _chatSender, _eventParams)
	/echo \ay doShrinkEventCalled
	/memspellset shrink
	/declare i int local 0
	/for i 0 to 5
		/call TrueTarget ${Group.Member[${i}].ID}
		/delay 5
		/call MQ2Cast "Shrink" gem1 5s
		/delay 10
	/next i
	/memspellset default
/return


|**
 ----------------------------
 INITIALIZATION Subs
 ----------------------------
 Initialization of values for this specific macro variant
 ----------------------------
**| 

Sub variant_initialize

	|-- set up default vars
	/declare    str_action				string	outer	Assisting	
	
	/memspellset ${str_spellset}
	/echo \at${Me.Class.Name} Loaded: MT: ${str_MTName}(${int_MTID}) HealPoint:${healPoint} ST: ${str_STName}(${int_STID})
	/call InitEvents_Class
/return













