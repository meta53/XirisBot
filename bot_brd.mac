|**
----------------------------
BOT_BRD.mac
----------------------------
This macro is configured for use by the BARD class
Modify the BOT_CLS_CHARNAME.ini file for use by a specific toon
This was written ground up for usage with xiris's bots.


Usage: /mac bot_brd ${_tank1Name} ${_tank2Name} ${_healPoint} ${_assistArgs}

______________________________________________
REVISION HISTORY
    05.08.22	xiris	INITIAL REVISION
	10.04.22	xiris	Moved Sing/Hush to this file (out of melee) 
						now setting up checks raid type and sings either melee/tank/caster by default
______________________________________________
REQUIRED PLUGINS
    mq2cast
    mq2eqbc
    mq2debuffs
    mq2moveutils
    
______________________________________________
REQUIRED INCLUDES  
	xiris_common/xiris_common.inc
**|


#include xiris_common/xiris_common.inc

#TURBO 120

#EVENT Sing				"#1# tells the group#*#'SingSongs#*#'"
#EVENT Sing				"#1# tells you#*#'SingSongs#*#'"
#EVENT Sing				"#1# tells the raid#*#'SingSongs#*#'"
#EVENT Sing 			"[ #1# #*#]#*#SingSongs#*#"

#EVENT Hush				"#1# tells the group#*#'Hush#*#'"
#EVENT Hush				"#1# tells you#*#'Hush#*#'"
#EVENT Hush				"#1# tells the raid#*#'Hush#*#'"
#EVENT Hush 			"[ #1# #*#]#*#Hush#*#"

#EVENT BardSlow			"#*#BardSlow#*#"

Sub InitEvents_Class
	/call RegisterClassEvents Events_BRD 2
/return

Sub Events_BRD
	/doevents Sing
	/doevents Hush
	/doevents BardSlow
/return 

Sub EVENT_Sing(_line, _sender, _eventParams)	
	/call SingSongs ${str_currentMedley}
	/doevents flush Sing
/return

Sub SingSongs(string _type)
	/call SetSpellSet ${_type}
	/echo \awSinging \ag${_type} \awmemming set
	/medley stop
	/medley ${_type}
/return

Sub EVENT_Hush(_line, _sender, _eventParams)
	/medley stop
	/doevents flush Hush
/return

Sub Event_BardSlow
	/echo \awToggling Bard Slow \ag${bln_bardSlow} \awto TRUE
	/call ToggleBardSlow TRUE
	/doevents flush BardSlow
/return


Sub ToggleBardSlow(bool _on) 
	/if (${_on}) {
		/echo \ag Turning on Slow! Memming Spell Set
		/varset timer_bardSlow 10s
		/varset bln_bardSlow TRUE
		/memspellset slow 
	} else {
		/varset bln_bardSlow FALSE
		/call SingSongs ${str_currentMedley}
	}
	
/return 

Sub Main(string _tank1Name, string _tank2Name, string _tank3Name, int _healPoint, string _assistArgs)
	
	
	/echo You are now in xiris_bot_${Me.Class.ShortName}.mac
 	/if (${Medley.Active}) /medley stop
	|-- initialize the common xbot libraries
	/call xbot_initialize ${_tank1Name} ${_tank2Name} ${_tank3Name} ${_healPoint} ${_assistArgs}

	|-- initialize the macro specific libraries
	/call variant_initialize

	|-- report my status
	/dgt [${Me.Class.ShortName}] ${Me.Name} ${str_action} >> ${Spawn[${_tank1Name}].CleanName} <<

	|-- target the MT
	/call TrueTarget ${int_MTID}
	
	|**
	----------------------------
	Main Loop
	----------------------------
	Runs in order listed,
	if adding any routine add the call here
	----------------------------
	**|

	:MainLoop
		/if (${Me.Hovering} || ${Window[tradewnd].Open} || ${Window[lootwnd].Open}) /goto :MainLoop
		|-- Check all Events
		/call RunAllEvents

		|-- Check to make sure MT is still alive, if not, find another
		/call chkMTAlive FALSE
		
		|-- Check Offtanking Situation (xiris_offtanking.inc)
		/if (${bln_offTank}) /call chkOffTanking
		
		|-- Check to see if self needs to be cured (xiris_curing.inc)
		/call chkNeedCure
		
		|-- Check Auto Assist if its on
		/if (${bln_autoAssist}) /call chkAutoAssist
		
		/if (${bln_engaged}) {
			|-- check all events
			/call RunAllEvents

			|-- class specific
			/call chkBardSlow

			|-- dps library (casting hybrid)
			/call chkNuke
			/call chkDOT

			|-- std library (burns/aa/clicks)
			/call chkAA
			/call chkBurn
			/call chkClicky
			
			|-- verify target status
			/call chkTargetStatus
		} else {
			|-- check utilities, includes: sit,loot,leash (out of combat only) and only once every 10 seconds
			/if (!${timer_check_utilities}) /call chkUtils
			/if (!${timer_check_downshits}) /call chkDownshits
			/if (!${timer_check_loot} && ${bln_looting}) /call chkLoot
		}

	|-- start again	
    /goto :MainLoop
/return

Sub SetupSongs
	| Set Bard songs based on raid type and group leader
	/if (${str_raidGroupMode.Equal[DEFAULT]}) {
		/if (${Me.CleanName.Equal[Ania]}) 	/varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Aergia]}) /varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Achlys]}) /varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Adikia]}) /varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Aidos]}) 	/varset str_currentMedley CASTER
		/if (${Me.CleanName.Equal[Achos]}) 	/varset str_currentMedley TANK
	} else /if (${str_raidGroupMode.Equal[HATRED]}) {
		/if (${Me.CleanName.Equal[Ania]}) 	/varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Aergia]}) /varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Achlys]}) /varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Adikia]}) /varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Aidos]}) 	/varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Achos]}) 	/varset str_currentMedley MELEE
	} else /if (${str_raidGroupMode.Equal[TRIAD]}) {
		/if (${Me.CleanName.Equal[Ania]}) 	/varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Aergia]}) /varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Achlys]}) /varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Adikia]}) /varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Aidos]}) 	/varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Achos]}) 	/varset str_currentMedley MELEE
	} else /if (${str_raidGroupMode.Equal[JELVAN]}) {
		/if (${Me.CleanName.Equal[Ania]}) 	/varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Aergia]}) /varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Achlys]}) /varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Adikia]}) /varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Aidos]}) 	/varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Achos]}) 	/varset str_currentMedley MELEE
	} else {
		/if (${Me.CleanName.Equal[Ania]}) 	/varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Aergia]}) /varset str_currentMedley TANK
		/if (${Me.CleanName.Equal[Achlys]}) /varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Adikia]}) /varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Aidos]}) 	/varset str_currentMedley MELEE
		/if (${Me.CleanName.Equal[Achos]}) 	/varset str_currentMedley MELEE
	}

	/varset str_spellset ${str_currentMedley}
	/memspellset ${str_currentMedley}	
	/call SingSongs ${str_currentMedley}
/return

Sub chkBardSlow
	
	/if (${bln_bardSlow} && !${timer_bardSlow} && ${Target.Type.Equal[NPC]}) {
		/echo \aw Slow? \aoUse? \ag${bln_bardSlow} \aoTimer? \ag${timer_bardSlow} \aoTargetType? \ag${Target.Type.Equal[NPC]}
		/medley queue ${str_bardSlow}
		/varset timer_bardSlow 10s
	}
/return

|**
| ----------------------------
| Utility Checking
| ----------------------------
| Checks the utilities such as fail states (GM, Lobby, etc)
| Checks to see if we should med, loot, leash
| ----------------------------
**|

Sub chkUtils
	|-- Standard Methods
	/call chkSit
	/varset timer_check_utilities 20s
/return



|**
 ----------------------------
 INITIALIZATION Sub
 ----------------------------
 Initialization of values for this specific macro variant
 ----------------------------
**| 
Sub variant_initialize	
	|-- set up default vars
	/declare    str_action				string	outer	Assisting	
	
	|--Bard Specific Settings
	|--Medley
	/declare    str_currentMedley	    string	outer	melee
	/declare 	str_savedMedley			string  outer   melee
	/call SetupSongs
	/echo \at${Me.Class.Name} Loaded: MT: ${str_MTName}(${int_MTID}) HealPoint:${healPoint} ST: ${str_STName}(${int_STID})
	|--Bard Slow
	/declare timer_bardSlow				timer	outer 	10s
	/declare bln_bardSlow				bool	outer	FALSE
	/declare str_bardSlow	            string	outer   "Zuriki's Song of Shenanigans"

	/call InitEvents_Class
/return



